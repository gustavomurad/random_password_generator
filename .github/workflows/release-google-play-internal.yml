name: Google Play (Internal)

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  google-play:
    name: Release (Internal Tests)

    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel:  stable

      - name: Flutter version
        run: flutter --version

      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Download pub dependencies
        run: flutter pub get

      # Workaround for https://github.com/actions/virtual-environments/issues/1337
      - name: Prepare NDK dir for caching
        run: |
          sudo mkdir -p /usr/local/lib/android/sdk/ndk/22.1.7171670
          sudo chmod -R 777 /usr/local/lib/android/sdk/ndk/22.1.7171670
          sudo chown -R $USER:$USER /usr/local/lib/android/sdk/ndk/22.1.7171670

      - name: NDK Cache
        id: ndk-cache
        uses: actions/cache@v2
        with:
          path: /usr/local/lib/android/sdk/ndk/22.1.7171670
          key: ndk-cache-22.1.7171670-v2

      - name: Install NDK
        if: steps.ndk-cache.outputs.cache-hit != 'true'
        run: echo "y" | /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;22.1.7171670"

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties

      - name: Build Android App Bundle
        run: flutter build appbundle #--flavor full

      - name: Cache bundle dependencies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Download bundle dependencies
        run: |
          gem install bundler:2.0.2
          bundle config path vendor/bundle
          bundle install

      - name: Release to Google Play (internal)
        env:
          SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
          SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        run: |
          bundle exec fastlane supply --aab build/app/outputs/bundle/release/app-release.aab --track internal